// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TuHotelEnLinea.Data;

#nullable disable

namespace TuHotelEnLinea.Migrations
{
    [DbContext(typeof(TuHotelEnLineaContext))]
    [Migration("20230121105144_UltimateDb")]
    partial class UltimateDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TuHotelEnLinea.Models.Booking", b =>
                {
                    b.Property<int>("BookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookingId"), 1L, 1);

                    b.Property<string>("BookingDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("PackageId")
                        .HasColumnType("int");

                    b.HasKey("BookingId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("PackageId");

                    b.ToTable("Booking");
                });

            modelBuilder.Entity("TuHotelEnLinea.Models.CategoryRoom", b =>
                {
                    b.Property<int>("CategoryRoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryRoomId"), 1L, 1);

                    b.Property<string>("CategoryRoomDescription")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("CategoryRoomName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CategoryRoomId");

                    b.ToTable("CategoryRoom");
                });

            modelBuilder.Entity("TuHotelEnLinea.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"), 1L, 1);

                    b.Property<string>("CustomerIdCard")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CustomerLastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CustomerPhone")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.HasKey("CustomerId");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("TuHotelEnLinea.Models.CustomerXRoom", b =>
                {
                    b.Property<int>("CustomerXRoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerXRoomId"), 1L, 1);

                    b.Property<string>("CustomerCreatedAt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.HasKey("CustomerXRoomId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("RoomId");

                    b.ToTable("CustomerXRoom");
                });

            modelBuilder.Entity("TuHotelEnLinea.Models.Extra", b =>
                {
                    b.Property<int>("ExtraId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExtraId"), 1L, 1);

                    b.Property<string>("ExtraDescription")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<string>("ExtraName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ExtraId");

                    b.ToTable("Extra");
                });

            modelBuilder.Entity("TuHotelEnLinea.Models.Package", b =>
                {
                    b.Property<int>("PackageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PackageId"), 1L, 1);

                    b.Property<string>("PackageName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double>("PackagePrice")
                        .HasColumnType("float");

                    b.Property<int>("PackageQdays")
                        .HasColumnType("int");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.HasKey("PackageId");

                    b.HasIndex("RoomId");

                    b.ToTable("Package");
                });

            modelBuilder.Entity("TuHotelEnLinea.Models.PackageExtra", b =>
                {
                    b.Property<int>("PackageExtraId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PackageExtraId"), 1L, 1);

                    b.Property<int>("ExtraId")
                        .HasColumnType("int");

                    b.Property<int>("PackageId")
                        .HasColumnType("int");

                    b.HasKey("PackageExtraId");

                    b.HasIndex("ExtraId");

                    b.HasIndex("PackageId");

                    b.ToTable("PackageExtra");
                });

            modelBuilder.Entity("TuHotelEnLinea.Models.PaymentMethod", b =>
                {
                    b.Property<int>("PaymentMethodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentMethodId"), 1L, 1);

                    b.Property<string>("PaymentMethodName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("PaymentMethodId");

                    b.ToTable("PaymentMethod");
                });

            modelBuilder.Entity("TuHotelEnLinea.Models.Room", b =>
                {
                    b.Property<int>("RoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoomId"), 1L, 1);

                    b.Property<int>("CategoryRoomId")
                        .HasColumnType("int");

                    b.Property<int>("RoomFloor")
                        .HasColumnType("int");

                    b.Property<int>("RoomNum")
                        .HasColumnType("int");

                    b.Property<int>("RoomQuota")
                        .HasColumnType("int");

                    b.HasKey("RoomId");

                    b.HasIndex("CategoryRoomId");

                    b.ToTable("Room");
                });

            modelBuilder.Entity("TuHotelEnLinea.Models.Sale", b =>
                {
                    b.Property<int>("SaleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SaleId"), 1L, 1);

                    b.Property<int>("BookingId")
                        .HasColumnType("int");

                    b.Property<int>("PaymentMethodId")
                        .HasColumnType("int");

                    b.Property<double>("SaleTotal")
                        .HasColumnType("float");

                    b.HasKey("SaleId");

                    b.HasIndex("BookingId");

                    b.HasIndex("PaymentMethodId");

                    b.ToTable("Sale");
                });

            modelBuilder.Entity("TuHotelEnLinea.Models.Booking", b =>
                {
                    b.HasOne("TuHotelEnLinea.Models.Customer", "Customer")
                        .WithMany("Bookings")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TuHotelEnLinea.Models.Package", "Package")
                        .WithMany("Bookings")
                        .HasForeignKey("PackageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Package");
                });

            modelBuilder.Entity("TuHotelEnLinea.Models.CustomerXRoom", b =>
                {
                    b.HasOne("TuHotelEnLinea.Models.Customer", "Customer")
                        .WithMany("CustomerXRooms")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TuHotelEnLinea.Models.Room", "Room")
                        .WithMany("CustomerXRooms")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("TuHotelEnLinea.Models.Package", b =>
                {
                    b.HasOne("TuHotelEnLinea.Models.Room", "Room")
                        .WithMany("Packages")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");
                });

            modelBuilder.Entity("TuHotelEnLinea.Models.PackageExtra", b =>
                {
                    b.HasOne("TuHotelEnLinea.Models.Extra", "Extra")
                        .WithMany("PackageExtras")
                        .HasForeignKey("ExtraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TuHotelEnLinea.Models.Package", "Package")
                        .WithMany("PackageExtras")
                        .HasForeignKey("PackageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Extra");

                    b.Navigation("Package");
                });

            modelBuilder.Entity("TuHotelEnLinea.Models.Room", b =>
                {
                    b.HasOne("TuHotelEnLinea.Models.CategoryRoom", "CategoryRoom")
                        .WithMany("Rooms")
                        .HasForeignKey("CategoryRoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CategoryRoom");
                });

            modelBuilder.Entity("TuHotelEnLinea.Models.Sale", b =>
                {
                    b.HasOne("TuHotelEnLinea.Models.Booking", "Booking")
                        .WithMany("Sales")
                        .HasForeignKey("BookingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TuHotelEnLinea.Models.PaymentMethod", "PaymentMethod")
                        .WithMany("Sales")
                        .HasForeignKey("PaymentMethodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Booking");

                    b.Navigation("PaymentMethod");
                });

            modelBuilder.Entity("TuHotelEnLinea.Models.Booking", b =>
                {
                    b.Navigation("Sales");
                });

            modelBuilder.Entity("TuHotelEnLinea.Models.CategoryRoom", b =>
                {
                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("TuHotelEnLinea.Models.Customer", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("CustomerXRooms");
                });

            modelBuilder.Entity("TuHotelEnLinea.Models.Extra", b =>
                {
                    b.Navigation("PackageExtras");
                });

            modelBuilder.Entity("TuHotelEnLinea.Models.Package", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("PackageExtras");
                });

            modelBuilder.Entity("TuHotelEnLinea.Models.PaymentMethod", b =>
                {
                    b.Navigation("Sales");
                });

            modelBuilder.Entity("TuHotelEnLinea.Models.Room", b =>
                {
                    b.Navigation("CustomerXRooms");

                    b.Navigation("Packages");
                });
#pragma warning restore 612, 618
        }
    }
}
